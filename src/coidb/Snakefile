from snakemake.utils import validate

# this container defines the underlying OS for each job when using the workflow
# with --use-conda --use-singularity
singularity: "docker://continuumio/miniconda3:4.9.2"

# Validate config
validate(config, "config.schema.yaml")

localrules: coidb, download, filter, format

rule coidb:
    input: expand("bold_clustered.{w}.fasta", w=["assignTaxonomy", "addSpecies"])

rule download:
    """
    Download zipfile with database sequences + info
    """
    output:
        "bold.zip",
        "bold_bins.zip"
    log:
        "logs/download.log"
    params:
        url=config["database"]["url"],
        tax_url=config["database"]["tax_url"]
    shell:
        """
        curl -L -o $TMPDIR/bold.zip {params.url} > {log} 2>&1
        curl -L -o $TMPDIR/bold_bins.zip {params.tax_url} >> {log} 2>&1
        mv $TMPDIR/bold.zip {output[0]}
        mv $TMPDIR/bold_bins.zip {output[1]}
        """

rule extract:
    input:
        "bold.zip",
        "bold_bins.zip"
    output:
        "bold_info.tsv",
        "bold_seqs.txt",
        "bold_taxa.txt"
    log:
        "logs/extract.log"
    shell:
        """
        unzip -o -d $TMPDIR/ {input[0]} occurrences.txt dna.txt >> {log} 2>&1
        unzip -o -d $TMPDIR/ {input[1]} taxon.txt >> {log} 2>&1
        mv $TMPDIR/occurrences.txt {output[0]}
        mv $TMPDIR/dna.txt {output[1]}
        mv $TMPDIR/taxon.txt {output[2]}  
        """

rule filter:
    """
    Extract record ids based on taxonomy
    """
    input:
        "bold_info.tsv",
        "bold_seqs.txt",
        "bold_taxa.txt"
    output:
        info = "bold_info_filtered.tsv",
        fasta = "bold_filtered.fasta",
    params:
        genes = config["database"]["gene"],
        phyla = config["database"]["phyla"],
        tmpf = "$TMPDIR/bold_filtered.fasta"
    script:
        "scripts/common.py"

rule cluster:
    """
    Cluster the filtered fasta file using vsearch
    """
    input:
        fasta = "bold_filtered.fasta"
    output:
        fasta = "bold_clustered.fasta"
    log:
        "logs/bold/cluster.log"
    conda:
        "envs/cluster.yml"
    threads: 10
    resources:
        runtime = lambda wildcards, attempt: attempt ** 2 * 60 * 10
    params:
        pid = config["database"]["pid"]
    shell:
        """
        cluster_bold.py --threads {threads} --pid {params.pid} \
            {input.fasta} {output.fasta} > {log} 2>&1 
        """

rule format:
    """
    Formats the clustered fasta file into DADA2-ready files
    """
    input:
        fasta = "bold_clustered.fasta",
        info = "bold_info_filtered.tsv"
    output:
        assignTaxaFasta = "bold_clustered.assignTaxonomy.fasta",
        addSpeciesFasta = "bold_clustered.addSpecies.fasta"
    script:
        "scripts/common.py"